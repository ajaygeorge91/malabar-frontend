# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="changeme"

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Registers the request handler
# ~~~~~
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

# Registers the filters
# ~~~~~
play.filters.enabled += "play.filters.csp.CSPFilter"

# The application DI modules
# ~~~~~
play.modules.enabled += "modules.BaseModule"
play.modules.enabled += "modules.JobModule"
play.modules.enabled += "modules.SilhouetteModule"
play.modules.enabled += "modules.WalletModule"
play.modules.enabled += "play.api.libs.mailer.MailerModule"

play.modules.disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"

# The asset configuration
# ~~~~~
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

# Akka config
akka {
  loglevel = "INFO"
  jvm-exit-on-fatal-error=off

  # Auth token cleaner
  quartz.schedules.AuthTokenCleaner {
    expression = "0 0 */1 * * ?"
    timezone = "UTC"
    description = "cleanup the auth tokens on every hour"
  }
}

play.evolutions.autocommit=false

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
slick.dbs.default {
  profile="slick.jdbc.PostgresProfile$"
  db {
    driver="org.postgresql.Driver"
    url = ${?JDBC_DATABASE_URL}
    user = ${?DATABASE_USER}
    password = ${?DATABASE_PWD}

    url="jdbc:postgresql://localhost:5432/testdb4"
    user=postgres
    password="postgres123"

    numThreads=3
    maxConnections=3
  }
}

# Play mailer
play.mailer {
  host = "localhost"
  port = 25
  mock = true
}

# Security Filter Configuration - Content Security Policy
play.filters.csp {
  directives {
    default-src = "'self'"
    img-src = "'self' data: *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com chart.googleapis.com ccvault.io"
    style-src = "'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com"
    font-src = "'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com"
    script-src =  "'self' 'unsafe-inline' 'unsafe-eval' cdnjs.cloudflare.com cdn.jsdelivr.net"
    connect-src = "'self' twitter.com *.xing.com"
  }
}

blockfrost.project.id = "mainnetJ1CVtiMM6Gq23upp7wilFuhIbv0Uo6kb"
blockfrost.project.test.id = "testnetPBWjF0QEx6Sy9QCK4mhQBO5Q1wFQEkFM"
cardano.mainnet = true

cardano-wallet-host = "http://54.90.146.73:8090/v2/"
redis-host = "54.90.146.73"
redis-port = "6379"

cardano-graphql = "http://52.91.2.206:3100/graphql"

include "silhouette.conf"
